
#-------------
#-------------
## 4_modules.cfg
#-------------

#-------------------- Modules Section ----------------------------------------#

#-- modules directory

mpath="/usr/lib/x86_64-linux-gnu/kamailio/modules/"

#-- core modules

loadmodule "kex.so"
loadmodule "corex.so"

#-------- Loading Mod postgres ------------------------------------------------#

#!ifdef WITH_DB
loadmodule "db_postgres.so"
#!endif

#-------- Loading Mod TLS -----------------------------------------------------#

#!ifdef WITH_TLS
  enable_tls=yes
  loadmodule "tls.so"
  modparam("tls", "config", "/etc/kamailio/tls.cfg")
#!endif

#-------- Loading Mod TM ------------------------------------------------------#

loadmodule "tm.so"
modparam("tm", "failure_reply_mode", 3)
modparam("tm", "fr_timer", TIMER_INVITE_NOANSWER)
modparam("tm", "fr_inv_timer", 120000)

loadmodule "tmx.so"

#-------- Loading Mod SL ---------------------------------------------#

loadmodule "sl.so"

#-------- Loading Mod RR ---------------------------------------------#

loadmodule "rr.so"
modparam("rr", "append_fromtag", 1)
modparam("rr", "enable_full_lr", 1)

#-------- Loading Mod PV ---------------------------------------------#
loadmodule "pv.so"
modparam("pv", "varset", "defaultChannels=i:2")
modparam("pv", "varset", "max_attempts=i:2")

#-------- Loading Mod MAXFWD -----------------------------------------#
loadmodule "maxfwd.so"

#-------- Loading Mod REGISTRAR --------------------------------------#
## usrloc and sl module must be loaded before
loadmodule "registrar.so"
modparam("registrar", "method_filtering", 1)
modparam("registrar", "append_branches", 0)
modparam("registrar", "max_expires", 3600)
modparam("registrar", "gruu_enabled", 0)
modparam("registrar", "received_avp", "$avp(RECEIVED)")

#-------- Loading Mod AUTH -----------------------------------------#
loadmodule "auth.so"
modparam("auth", "nonce_count", 1)
modparam("auth", "qop", "auth")
modparam("auth", "nonce_expire", 60)
modparam("auth", "nonce_auth_max_drift", 2)
modparam("auth", "auth_checks_register", 11)
modparam("auth", "auth_checks_no_dlg", 9)
modparam("auth", "auth_checks_in_dlg", 15)

#-------- Loading Mod HTTP------------------------------#
#!ifdef WITH_API
  loadmodule "http_async_client.so"
  modparam("http_async_client", "curl_verbose", 1)
  modparam("http_async_client", "workers", 4)
  modparam("http_async_client", "hash_size", 4096)
  modparam("http_async_client", "connection_timeout", 1000)
#!endif

#-------- Loading Mod JSON MODULES------------------------------#
loadmodule "jansson.so"
loadmodule "rtjson.so"

#-------- Loading Mod NATHELPER ------------------------------------#
## usrloc module must be loaded before
loadmodule "nathelper.so"
modparam("nathelper", "natping_interval", 30)
modparam("nathelper", "ping_nated_only", 1)
modparam("nathelper", "sipping_bflag", FLB_NATSIPPING)
modparam("nathelper", "sipping_from", "SIP_FROM_DOMAIN_NAT")
modparam("nathelper", "received_avp", "$avp(RECEIVED)")

#-------- Loading Mod IPOPS -----------------------------------------#
loadmodule "ipops.so"

#-------- Loading Mod PIKE ------------------------------------------#
#!ifdef WITH_ANTIFLOOD
  loadmodule "pike.so"
  modparam("pike", "sampling_time_unit", 2)
  modparam("pike", "reqs_density_per_unit", 16)
  modparam("pike", "remove_latency", 4)
#!endif

#-------- Loading Mod XLOG XHTTP SIPUTILS AND SANITY  ---------------#
loadmodule "textops.so"
loadmodule "sdpops.so"
## sl module must be loaded before
loadmodule "siputils.so"
loadmodule "xlog.so"
modparam("xlog", "prefix", "| ")
#modparam("xlog", "log_facility", "LOG_DAEMON1") => for production change it
loadmodule "sanity.so"

#-------- Loading Mod DEBUG -----------------------------------------#
#!ifdef WITH_DEBUG
  loadmodule "debugger.so"
  modparam("debugger", "cfgtrace", 1)
  modparam("debugger", "log_level_name", "exec")
#!endif

#-------- Loading Mod HASH TABLE -------------------------------------#
loadmodule "htable.so"
modparam("htable", "htable", "ipban=>size=8;autoexpire=300;")
modparam("htable", "htable", "maliciousMap=>size=12;autoexpire=300;")
modparam("htable", "htable", "rhs=>size=32;initval=0;autoexpire=300;")

#------ Loading Mod ACC ----------------------------------------------#

#!ifdef WITH_DB
loadmodule "acc.so"
modparam("acc", "early_media", 1)
modparam("acc", "report_ack", 1)
modparam("acc", "report_cancels", 1)
modparam("acc", "detect_direction", 0)
modparam("acc", "db_insert_mode", 2)
modparam("acc", "cdr_enable", 1)
modparam("acc", "cdr_expired_dlg_enable", 1)
modparam("acc", "db_url", DBURL)
modparam("acc", "cdrs_table", "pyfb_reporting_cdr")
modparam("acc", "db_flag", FLT_ACC)
modparam("acc", "db_missed_flag", FLT_ACCMISSED)
modparam("acc", "failed_transaction_flag", FLT_ACCFAILED)
modparam("acc", "db_table_missed_calls", "missed_calls")
modparam("acc", "time_mode", 1)
modparam("acc", "db_extra",
        "from_user=$fU;from_domain=$fd;src_ip=$si;ruri_user=$rU;ruri_domain=$rd;cseq=$cs")
modparam("acc", "cdr_start_on_confirmed", 1)
modparam("acc", "cdr_on_failed", 1)
modparam("acc", "cdr_start_id", "start_stamp")
modparam("acc", "cdr_end_id", "end_stamp")
modparam("acc", "cdr_duration_id", "duration")
modparam("acc", "cdr_extra_nullable", 1)
#!endif

loadmodule "cfgutils.so"

#------ Loading Mod SIPTRACE -------------------------------------------#
#!ifdef WITH_SIPTRACE
    loadmodule "siptrace.so"
    modparam("siptrace", "duplicate_uri", SIPCAPTURL)
    modparam("siptrace", "hep_mode_on", 1)
    modparam("siptrace", "trace_to_database", 0)
    modparam("siptrace", "trace_flag", 2)
    modparam("siptrace", "hep_version", 1)
    modparam("siptrace", "trace_on", SIPCAPT)
#!endif

#-------------
